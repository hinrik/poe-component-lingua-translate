=encoding utf8

=head1 NAME

POE::Component::Lingua::Translate - A non-blocking wrapper around L<Lingua::Translate|Lingua::Translate>

=head1 SYNOPSIS

 use POE;
 use POE::Component::Lingua::Translate;

 POE::Session->create(
     package_states => [
         main => [ qw(_start translated) ],
     ],
 );

 $poe_kernel->run();

 sub _start {
     my $heap = $_[HEAP];
     $heap->{trans} = POE::Component::Lingua::Translate->new(
         alias => 'translator',
         back_end => 'Babelfish',
         src      => 'en',
         dest     => 'de',
     );
     
     $poe_kernel->post(translator => translate => 'This is a sentence');
     return;
 }

 sub translated {
     my $result = $_[ARG0];
     # prints 'Dieses ist ein Satz'
     print $result . "\n";
 }

=head1 DESCRIPTION

POE::Component::Lingua::Translate is a L<POE> component that provides a
non-blocking wrapper around L<Lingua::Translate|Lingua::Translate>. It accepts
C<translate> events and emits C<translated> events back.

=head1 CONSTRUCTOR

=over

=item C<new>

Arguments

'alias', an optional alias for the component's session.

Any other arguments will be passed verbatim to L<Lingua::Translate|Lingua::Translate>'s
constructor.

=back

=head1 METHODS

=over

=item C<session_id>

Takes no arguments. Returns the POE Session ID of the component.

=back

=head1 INPUT

The POE events this component will accept.

=over

=item C<translate>

The first argument should be a string containing some text to translate. The
second argument (optional) can be a hash reference containing some context
information. You'll get this hash reference back with the C<translated> event.

=item C<shutdown>

Takes no arguments, terminates the component.

=back

=head1 OUTPUT

The POE events emitted by this component.

=over

=item C<translated>

ARG0 is the translated text. ARG1 is the context hashref from C<translate>. If
there was an error, ARG2 will be the error string.

=back

=head1 AUTHOR

Hinrik E<Ouml>rn SigurE<eth>sson, hinrik.sig@gmail.com

=head1 LICENSE AND COPYRIGHT

Copyright 2008 Hinrik E<Ouml>rn SigurE<eth>sson

This program is free software, you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
